{"ast":null,"code":"import { environment } from './../../../environments/environment.prod';\nimport { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RequsetHandlerService = /*#__PURE__*/(() => {\n  class RequsetHandlerService {\n    constructor(http) {\n      this.http = http;\n      this.api = environment.API;\n    }\n\n    get(path, params) {\n      const httpOptions = {\n        headers: new HttpHeaders({}),\n        observe: 'response',\n        params: params\n      };\n      httpOptions.headers = httpOptions.headers.append('Content-Type', 'application/json');\n      return this.http.get(`${this.api}${path}`, httpOptions).pipe(map(response => response.body)); // catchError(err => this.errorService.handleHttpError(err)) ,\n      // switchMap((data: any) => data && data.statusCode && data.statusCode !== 20000 && data.statusCode !== 200\n      //   ? this.errorService.handleAppError(data)\n      //   : of(data)));\n    }\n\n    post(path, body, params) {\n      const httpOptions = {\n        headers: new HttpHeaders({}),\n        observe: 'response',\n        params\n      };\n      httpOptions.headers = httpOptions.headers.append('Content-Type', 'application/json');\n      return this.http.post(`${this.api}${path}`, body, httpOptions).pipe( // tap((response: any) => this.extractHeaders(response.headers)) ,\n      map(response => response.body)); // catchError(err => this.errorService.handleHttpError(err)) ,\n      // switchMap((data: any) => data && data.statusCode && data.statusCode !== 20000 && data.statusCode !== 200\n      //   ? this.errorService.handleAppError(data)\n      //   : of(data))\n      //   );\n    }\n\n  }\n\n  RequsetHandlerService.ɵfac = function RequsetHandlerService_Factory(t) {\n    return new (t || RequsetHandlerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RequsetHandlerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequsetHandlerService,\n    factory: RequsetHandlerService.ɵfac,\n    providedIn: 'root'\n  });\n  return RequsetHandlerService;\n})();","map":null,"metadata":{},"sourceType":"module"}