{"ast":null,"code":"import { NG_VALIDATORS } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nexport let PhoneValidatorDirective = /*#__PURE__*/(() => {\n  class PhoneValidatorDirective {\n    constructor(el) {\n      this.el = el;\n      console.log('phone Validator');\n    }\n\n    validate(c) {\n      this.el.nativeElement.value = this.el.nativeElement.value.replace(/[^0-9 ]/g, '').replace(/\\s/g, '');\n      return phoneValidator(c);\n    }\n\n  }\n\n  PhoneValidatorDirective.ɵfac = function PhoneValidatorDirective_Factory(t) {\n    return new (t || PhoneValidatorDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  PhoneValidatorDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: PhoneValidatorDirective,\n    selectors: [[\"\", \"phone\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: PhoneValidatorDirective,\n      multi: true\n    }])]\n  });\n  return PhoneValidatorDirective;\n})();\nexport const phoneValidator = control => {\n  const pattern = \"[0-9]{2,3}-[0-9]{7,10}\";\n  var regex = new RegExp(pattern);\n  return control.value && regex.test(control.value) ? {\n    'phone': true\n  } : null;\n};","map":null,"metadata":{},"sourceType":"module"}